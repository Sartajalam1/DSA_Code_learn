//Missing Elements from An Array with Duplicates
#include<iostream>
using namespace std;
void findMissing(int*arr,int n){
  for(int i = 0; i<n; i++){
    int index = abs(arr[i]);
    if(arr[index-1]>0){
      //visited element
      arr[index-1]*= -1;
    }
  }
  // // it is print negative value
  // for(int i = 0; i<n; i++){
  //   cout<<arr[i]<<" ";
  // }
  //All positive indexs are missing Element 
  for(int i = 0; i<n; i++){
    if(arr[i]>0)
      cout<<i+1<<" ";
  }
}
int main(){
  int arr[] = {1,3,3,3,3};
  int n = sizeof(arr)/sizeof(int);

  findMissing(arr,n);
}
// 2nd Method
// Sorting + swaping Method
//Missing Elements from An Array with Duplicates

// sorting + swaping method
#include<iostream>
using namespace std;
void findMissing(int*arr,int n){
  int i = 0;
  while(i<n){
    int index = arr[i]-1;
    if(arr[i] != arr[index]){
      swap(arr[i],arr[index]);
    }
    else{
      ++i;
    }
  }
  for(int i = 0; i<n; i++){
    cout<<arr[i]<<" ";
  }
  cout<<endl;
}
int main(){
  int arr[] = {1,2,3,3,5};
  int n = sizeof(arr)/sizeof(int);

  findMissing(arr,n);
}
