// Q.1 RECTANLGE PATTERNS
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;
  int m;
  cin>>m;

  for(int row = 0; row<n; row++){
    for(int col = 0; col<m; col++){
      cout<<"* ";
    }
    cout<<endl;
  }
}

// Q.2 SOLID SQUARE PATTERNS
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;

  for(int row = 0; row<n; row++){
    for(int col = 0; col<n; col++){
      cout<<"* ";
    }
    cout<<endl;
  }
}

// Q.3 HOLLOW Square
#include<iostream>
using namespace std;

int main(){
  int n;
  cout<<"Enter the number of Row"<<endl;
  cin>>n;

  for(int row = 0; row<n; row++){
    for(int col = 0; col<n; col++){
      if(row == 0 || row == n-1 ||col == 0 || col == n-1){
        cout<<"*";
      }
      else{
        cout<<" ";
      }
    }
    cout<<endl;
  }
}

// Q.4 Hollow Rectangle
#include <iostream>
using namespace std;

int main() {
  int rowCount, colCount;
  cin >> rowCount;
  cin >> colCount;
  for (int row = 0; row < rowCount; row = row + 1) {
    // first row or last row -> print 5 *
    if (row == 0 || row == rowCount - 1) {
      for (int col = 0; col < colCount; col++) {
        cout << "* ";
      }
    } else {
      // remainging middle rows
      // first star
      cout << "* ";

      // spaces
      for (int i = 0; i < colCount - 2; i = i + 1){
        cout <<"  ";
      }
      // last star
      cout << "* ";
    }
    cout << endl;
  }
}

// Q.5 Inverted Pyramid
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;
  for(int row = 0; row<n; row++){
    for(int col = 0; col<n-row; col++){
      cout<<"*";
    }
    cout<<endl;
  }
}

// Q.6 Numeric Half Pyramid
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;
  for(int row = 0; row<n; row++){
    for(int col = 0; col<row+1; col++){
      cout<<col+1;
    }
    cout<<endl;
  }
}
// Q.7 Inverted Numeric Half Pyramid
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;

  for(int row = 0; row<n; row++){
    for(int col = 0; col<n-row; col++){
      cout<<col+1;
    }
    cout<<endl;
  }
}
// Q.8 Hollow Inverted Half Pyramid
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;

  for(int row = 0; row<n; row++){
    for(int col = 0; col<n; col++){
      if(row == 0 ||  col == 0 || col == n-row-1){
        cout<<"*";
      }
      else{
        cout<<" ";
      }

  }
    cout<<endl;
}
}

// Q.9 full Pyramid
#include<iostream>
using namespace std;

int main(){
  int n;
  cin>>n;
  for(int row = 0; row<n; row++){
// space formula = (n-row-1)
    for(int col = 0; col<n-row-1; col++){
      cout<<" ";
    }
    // Stars print
    for(int col = 0; col<row+1; col++){
      cout<<"* ";
    }
    cout<<endl;
  }
}

// Q.10 Inverted Full Pyramid
// #include<iostream>
// using namespace std;

// int main(){
//   int n;
//   cin>>n;
//   for(int row = 0; row<n; row++){
      // space formula = (row)
//     for(int col = 0; col<row; col++){
//       cout<<" ";
//     }
       // stars print
//     for(int col = 0; col<n-row; col++){
//       cout<<"* ";
//     }
//     cout<<endl;
//   }
// }

// // Q.11 Diamond Pyramid
// #include<iostream>
// using namespace std;

// int main(){
//   int n;
//   cin>>n;
//   //full Pyramid
//   for(int row = 0; row<n; row++){
//     // space formula = (n-row-1)
//     for(int col = 0; col<n-row-1; col++){
//       cout<<" ";
//     }
//     //stars print 
//     for(int col = 0; col<row+1; col++){
//       cout<<"* ";
//     }
//     cout<<endl;
//   }
//   // half part Inverted Pyramid code
//   for(int row = 0; row<n; row++){
//     // space formula = (row)
//     for(int col = 0; col<row; col++){
//       cout<<" ";
//     }
//     //stars print
//     for(int col = 0; col<n-row; col++){
//       cout<<"* ";
//     }
//     cout<<endl;
//   }
// }

// Q.12 Hollow Diamond 
// #include<iostream>
// using namespace std;

// int main(){
//   int n;
//   cin>>n;
//   for(int row = 0; row<n; row++){
//     // space formula = (n-row-1) 
//     for(int col = 0; col<n-row-1; col++){
//       cout<<" ";
//     }
//     // Stars Print formula = (2*row+1)
//     for(int col = 0; col<2*row+1; col++){
//       if(col == 0 || col == 2*row){
//         cout<<"*";
//       }
//         // inner Space print
//       else{
//         cout<<" ";
//       }
//     }
//     cout<<endl;
//   }
//   // second part
//   for(int row = 0; row<n; row++){
//     for(int col = 0; col<row; col++){
//       cout<<" ";
//     }
//     // Stars Print Formula = (2*n-2*row-1)
//     for(int col = 0; col<2*n-2*row-1; col++){
//       if(col == 0 || col == 2*n-2*row-2){
//         cout<<"*";
//       }
//         // Inner space print
//       else{
//         cout<<" ";
//       }
//     }
//     cout<<endl;
//   }
// }
